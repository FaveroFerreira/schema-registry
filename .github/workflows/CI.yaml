name: CI

env:
  CARGO_TERM_COLOR: always
  MSRV: '1.78'

on:
  push:
    branches:
      - main
  pull_request: {}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@protoc
      - uses: dtolnay/rust-toolchain@beta
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Check
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings
      - name: rustfmt
        run: cargo fmt --all --check

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: cargo doc
        env:
          RUSTDOCFLAGS: "-D rustdoc::all -A rustdoc::private-doc-tests"
        run: cargo doc --all-features --no-deps

  cargo-hack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@protoc
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Install cargo-hack
        run: |
          curl -LsSf https://github.com/taiki-e/cargo-hack/releases/latest/download/cargo-hack-x86_64-unknown-linux-gnu.tar.gz | tar xzf - -C ~/.cargo/bin
      - name: cargo hack check
        run: cargo hack check --each-feature --no-dev-deps --all

#  cargo-public-api-crates:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        crate: [schema-registry]
#    steps:
#      - uses: actions/checkout@v4
#      # Pinned version due to failing `cargo-public-api-crates`.
#      - uses: dtolnay/rust-toolchain@master
#        with:
#          toolchain: nightly-2024-06-06
#      - uses: Swatinem/rust-cache@v2
#        with:
#          save-if: ${{ github.ref == 'refs/heads/main' }}
#      - name: Install cargo-public-api-crates
#        run: |
#          cargo install --git https://github.com/davidpdrsn/cargo-public-api-crates
#      - name: Build rustdoc
#        run: |
#          cargo rustdoc --all-features --manifest-path ${{ matrix.crate }}/Cargo.toml -- -Z unstable-options --output-format json
#      - name: cargo public-api-crates check
#        run: cargo public-api-crates --manifest-path ${{ matrix.crate }}/Cargo.toml --skip-build check

  test-versions:
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta]
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@protoc
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Run tests
        run: cargo test --workspace --all-features --all-targets

  test-docs:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Run doc tests
        run: cargo test --all-features --doc

  dependencies-are-sorted:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@beta
      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Install cargo-sort
        run: |
          cargo install cargo-sort
      # Work around cargo-sort not honoring workspace.exclude
      - name: Remove non-crate folder
        run: rm -rf examples/async-graphql
      - name: Check dependency tables
        run: |
          cargo sort --workspace --grouped --check